// make sure fail has type bottom

def fakeReturnInt():Int
    runtime.fail("reason")
    // TODO: this version should also typecheck, perhaps?  Or add a language-level fail primitive?
    // assert "can't get here": false
    
def fakeReturnString():String
    runtime.fail("reason")

//def notFaked():Int
//    assert "bad arithmetic": 5 == 6

val b : Boolean = true

//TODO: fix typing rule for if
val x:Int = if (b)
    7
  else
    "do"//runtime.fail("reason")

val y = x-2


assert "bad arithmetic": 5 == 6
