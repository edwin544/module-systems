type Generic
  effect E

val q : Generic[{system.FFI}] = new
  effect E = {system.FFI}

val r : Generic[{system.FFI}] = new
  effect E = {}

val s : Generic[{}] = new
  effect E = {}

val t : Generic = new
  effect E = {}

def id[effect E, T](x : T) : {E} T
  x

// Even though {t.E} is actually {}, t is an instance of Generic (with no
// arguments passed to it), so {t.E} is hidden (abstract). The effect checker
// rejects passing in {t.E} here because {t.E} is not a subset of {s.E} = {} in
// geneal
def run() : {s.E} String
  id[{t.E}]("abc")

run()
